name: main
on:
  push:
    branches: [main, fixes]
  pull_request:
    branches: [main]
  # TODO: figure out how to split things up to handle labeled pull requests
  # pull_request_target:
  #   types: [labeled]
jobs:
  setup-connect:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    defaults:
      run:
        working-directory: setup-connect
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm install
      - run: npm run lint
      - run: npm run build
      - run: npm test
      - run: git diff --exit-code --ignore-all-space
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - uses: ./setup-connect
        with:
          python: true
          r: false
      - run: rsconnect version
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.2.x
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y libcurl4-openssl-dev
      - uses: ./setup-connect
        with:
          python: false
          r: true
      - run: Rscript --vanilla -e "packageVersion('rsconnect')"
  connect-publish:
    runs-on: ${{ matrix.os }}
    env:
      RSC_LICENSE: ${{ secrets.RSC_LICENSE }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    defaults:
      run:
        working-directory: connect-publish
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm install
      - run: npm run lint
      - run: npm run build
      # TODO: adapt tests to use bootstrapping method described at
      # https://docs.posit.co/connect/admin/programmatic-provisioning/
      # {
      #- run: docker-compose up -d
      ## TODO: figure out how to split things up to handle labeled pull requests
      ## - if: contains(github.event.pull_request.labels.*.name, 'safe-to-test')
      #- run: npm test
      #  env:
      #    RSTUDIO_CONNECT_API_KEY: ${{ secrets.RSTUDIO_CONNECT_API_KEY }}
      ## TODO: figure out how to split things up to handle labeled pull requests
      ## - if: contains(github.event.pull_request.labels.*.name, 'safe-to-test')
      #- uses: ./connect-publish
      #  id: connect-publish
      #  with:
      #    url: http://${{ secrets.RSTUDIO_CONNECT_API_KEY }}@127.0.0.1:23939
      #    access-type: logged_in
      #    show-logs: true
      #    force: true
      #    dir: |
      #      connect-publish/__tests__/testapps/plumber:/the-most/plumbing/evar
      #      connect-publish/__tests__/testapps/flask:dont-forget-to-flask
      #- run: printf '${{ steps.connect-publish.outputs.results }}\n' | jq .
      #- if: failure()
      #  run: docker-compose logs
      #- if: always()
      #  run: docker-compose down --remove-orphans
      # }
